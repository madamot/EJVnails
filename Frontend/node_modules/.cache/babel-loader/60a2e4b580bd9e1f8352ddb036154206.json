{"ast":null,"code":"let accessToken;\nconst Insta = {\n  getAccessToken() {\n    if (accessToken) {\n      return new Promise(resolve => resolve(accessToken));\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n\n    if (accessTokenMatch) {\n      accessToken = accessTokenMatch[1];\n      return accessToken;\n    } else {\n      const Url = \"https://api.instagram.com/oauth/authorize/?client_id=\".concat(client_id, \"&redirect_uri=\").concat(redirectURI, \"&response_type=token\");\n      window.location = Url;\n    }\n  },\n\n  async display() {\n    if (!accessToken) {\n      this.getAccessToken();\n    }\n\n    try {\n      let response = await fetch(\"https://api.instagram.com/v1/users/self/media/recent/?access_token=\".concat(accessToken), {\n        method: 'GET'\n      });\n\n      if (response.ok) {\n        console.log(response);\n        let jsonResponse = await response.json();\n        let medias = jsonResponse.data.map(media => ({\n          id: media.id,\n          image: media.images.standard_resolution.url\n        }));\n        return medias;\n      }\n\n      throw new Error('Request failed!');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/adamhorne/Desktop/ejvnails/src/components/insta.js"],"names":["accessToken","Insta","getAccessToken","Promise","resolve","accessTokenMatch","window","location","href","match","Url","client_id","redirectURI","display","response","fetch","method","ok","console","log","jsonResponse","json","medias","data","map","media","id","image","images","standard_resolution","url","Error","error"],"mappings":"AAAA,IAAIA,WAAJ;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,cAAc,GAAG;AACf,QAAIF,WAAJ,EAAiB;AACf,aAAO,IAAIG,OAAJ,CAAYC,OAAO,IAAIA,OAAO,CAACJ,WAAD,CAA9B,CAAP;AACD;;AACD,UAAMK,gBAAgB,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,CAAzB;;AACA,QAAIJ,gBAAJ,EAAsB;AACpBL,MAAAA,WAAW,GAAGK,gBAAgB,CAAC,CAAD,CAA9B;AACA,aAAOL,WAAP;AACD,KAHD,MAGO;AACL,YAAMU,GAAG,kEAA2DC,SAA3D,2BAAqFC,WAArF,yBAAT;AACAN,MAAAA,MAAM,CAACC,QAAP,GAAkBG,GAAlB;AACD;AACF,GAbW;;AAcZ,QAAMG,OAAN,GAAgB;AACd,QAAI,CAACb,WAAL,EAAkB;AAChB,WAAKE,cAAL;AACD;;AACD,QAAI;AACF,UAAIY,QAAQ,GAAG,MAAMC,KAAK,8EAAuEf,WAAvE,GAAsF;AAC9GgB,QAAAA,MAAM,EAAE;AADsG,OAAtF,CAA1B;;AAGA,UAAIF,QAAQ,CAACG,EAAb,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,YAAIM,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAzB;AACA,YAAIC,MAAM,GAAGF,YAAY,CAACG,IAAb,CAAkBC,GAAlB,CAAsBC,KAAK,KAAK;AAC3CC,UAAAA,EAAE,EAAED,KAAK,CAACC,EADiC;AAE3CC,UAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC,mBAAb,CAAiCC;AAFG,SAAL,CAA3B,CAAb;AAIA,eAAOR,MAAP;AACD;;AACD,YAAM,IAAIS,KAAJ,CAAU,iBAAV,CAAN;AACD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;AACF;;AAnCW,CAAd","sourcesContent":["let accessToken;\n\nconst Insta = {\n  getAccessToken() {\n    if (accessToken) {\n      return new Promise(resolve => resolve(accessToken));\n    }\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    if (accessTokenMatch) {\n      accessToken = accessTokenMatch[1];\n      return accessToken;\n    } else {\n      const Url = `https://api.instagram.com/oauth/authorize/?client_id=${client_id}&redirect_uri=${redirectURI}&response_type=token`\n      window.location = Url;\n    }\n  },\n  async display() {\n    if (!accessToken) {\n      this.getAccessToken();\n    }\n    try {\n      let response = await fetch(`https://api.instagram.com/v1/users/self/media/recent/?access_token=${accessToken}`, {\n        method: 'GET'\n      });\n      if (response.ok) {\n        console.log(response);\n        let jsonResponse = await response.json();\n        let medias = jsonResponse.data.map(media => ({\n          id: media.id,\n          image: media.images.standard_resolution.url\n        }));\n        return medias;\n      }\n      throw new Error('Request failed!');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}