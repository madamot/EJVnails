{"ast":null,"code":"var _jsxFileName = \"/Users/adamhorne/Desktop/ejvnails/src/components/Contact.js\";\nimport React, { Fragment } from 'react';\nimport { buildUrl } from 'react-instafeed';\nimport instafeed from 'react-instafeed'; // 🔥️ These are in your code (not this repo)\n\nimport useAbortableFetch from '@hooks/useAbortableFetch';\nimport Image from '@components/Image';\nconst options = {\n  accessToken: 'access...',\n  clientId: 'client...',\n  get: 'user',\n  // popular, user\n  locationId: null,\n  resolution: 'standard_resolution',\n  // thumbnail, low_resolution, standard_resolution\n  sortBy: 'none',\n  // none, least-commented, least-liked, least-recent, most-commented, most-liked, most-recent, random\n  tagName: null,\n  userId: 123\n};\nconst data = instafeed(options);\nconst instagramUrl = buildUrl(options);\n\nconst Instagram = () => {\n  const _useAbortableFetch = useAbortableFetch(buildUrl(options)),\n        json = _useAbortableFetch.json,\n        loading = _useAbortableFetch.loading,\n        error = _useAbortableFetch.error,\n        abort = _useAbortableFetch.abort;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error: \".concat(error);\n  if (!json) return null;\n  const data = json.data,\n        meta = json.meta,\n        pagination = json.pagination;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, // eslint-disable-next-line no-unused-vars\n  data && data.map(({\n    caption,\n    id,\n    images,\n    tags\n  }, index) => {\n    const image = images[options.resolution];\n    return React.createElement(Image, {\n      key: index,\n      url: image.url,\n      title: caption.text,\n      caption: caption.text,\n      width: image.width,\n      height: image.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Instagram;","map":{"version":3,"sources":["/Users/adamhorne/Desktop/ejvnails/src/components/Contact.js"],"names":["React","Fragment","buildUrl","instafeed","useAbortableFetch","Image","options","accessToken","clientId","get","locationId","resolution","sortBy","tagName","userId","data","instagramUrl","Instagram","json","loading","error","abort","meta","pagination","map","caption","id","images","tags","index","image","url","text","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CAIA;;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,WADC;AAEdC,EAAAA,QAAQ,EAAE,WAFI;AAGdC,EAAAA,GAAG,EAAE,MAHS;AAGD;AACbC,EAAAA,UAAU,EAAE,IAJE;AAKdC,EAAAA,UAAU,EAAE,qBALE;AAKqB;AACnCC,EAAAA,MAAM,EAAE,MANM;AAME;AAChBC,EAAAA,OAAO,EAAE,IAPK;AAQdC,EAAAA,MAAM,EAAE;AARM,CAAhB;AAWA,MAAMC,IAAI,GAAGZ,SAAS,CAACG,OAAD,CAAtB;AAEA,MAAMU,YAAY,GAAGd,QAAQ,CAACI,OAAD,CAA7B;;AAEA,MAAMW,SAAS,GAAG,MAAM;AAAA,6BACkBb,iBAAiB,CAACF,QAAQ,CAACI,OAAD,CAAT,CADnC;AAAA,QACdY,IADc,sBACdA,IADc;AAAA,QACRC,OADQ,sBACRA,OADQ;AAAA,QACCC,KADD,sBACCA,KADD;AAAA,QACQC,KADR,sBACQA,KADR;;AAEtB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AACX,MAAI,CAACF,IAAL,EAAW,OAAO,IAAP;AAJW,QAMdH,IANc,GAMaG,IANb,CAMdH,IANc;AAAA,QAMRO,IANQ,GAMaJ,IANb,CAMRI,IANQ;AAAA,QAMFC,UANE,GAMaL,IANb,CAMFK,UANE;AAQtB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACCR,EAAAA,IAAI,IACJA,IAAI,CAACS,GAAL,CAAS,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,EAAX;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,GAAD,EAAgCC,KAAhC,KAA0C;AACjD,UAAMC,KAAK,GAAGH,MAAM,CAACrB,OAAO,CAACK,UAAT,CAApB;AACA,WACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEkB,KADP;AAEE,MAAA,GAAG,EAAEC,KAAK,CAACC,GAFb;AAGE,MAAA,KAAK,EAAEN,OAAO,CAACO,IAHjB;AAIE,MAAA,OAAO,EAAEP,OAAO,CAACO,IAJnB;AAKE,MAAA,KAAK,EAAEF,KAAK,CAACG,KALf;AAME,MAAA,MAAM,EAAEH,KAAK,CAACI,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAZD,CAHJ,CADF;AAmBD,CA3BD;;AA6BA,eAAejB,SAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { buildUrl } from 'react-instafeed'\nimport instafeed from 'react-instafeed'\n\n\n\n// 🔥️ These are in your code (not this repo)\nimport useAbortableFetch from '@hooks/useAbortableFetch'\nimport Image from '@components/Image'\n\nconst options = {\n  accessToken: 'access...',\n  clientId: 'client...',\n  get: 'user', // popular, user\n  locationId: null,\n  resolution: 'standard_resolution', // thumbnail, low_resolution, standard_resolution\n  sortBy: 'none', // none, least-commented, least-liked, least-recent, most-commented, most-liked, most-recent, random\n  tagName: null,\n  userId: 123,\n}\n\nconst data = instafeed(options)\n\nconst instagramUrl = buildUrl(options)\n\nconst Instagram = () => {\n  const { json, loading, error, abort } = useAbortableFetch(buildUrl(options))\n  if (loading) return 'Loading...'\n  if (error) return `Error: ${error}`\n  if (!json) return null\n\n  const { data, meta, pagination } = json\n\n  return (\n    <Fragment>\n      {// eslint-disable-next-line no-unused-vars\n        data &&\n        data.map(({ caption, id, images, tags }, index) => {\n          const image = images[options.resolution]\n          return (\n            <Image\n              key={index}\n              url={image.url}\n              title={caption.text}\n              caption={caption.text}\n              width={image.width}\n              height={image.height}\n            />\n          )\n        })}\n    </Fragment>\n  )\n}\n\nexport default Instagram;\n"]},"metadata":{},"sourceType":"module"}